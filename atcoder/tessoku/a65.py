
'''
# 問題

株式会社 KYOPRO-MASTER には $N$ 人の社員がおり、地位順に $1$ から $N$ までの番号が付けられています。 社長(社員 $1$)以外には直属の上司が $1$ 人おり、社員 $i$ の直属の上司は社員 $A\_i$ です。 各社員について、部下が何人いるかを出力してください。 ただし、社員 $y$ が社員 $x$ の部下であるとは、$x\neq y$ であり、なおかつ社員 $y$ の直属の上司をたどって社員 $x$ に到達できることを指します。

# 考察

木構造で自身より下のノードを探索する。
は〜、これが木DPってやつなの。
上司の番号が部下よりも小さい制約があるから、それを使って逆に舐めていくと良い。

'''
N = int(input())
A = [0,0] + list(map(int,input().split()))
G = [[] for _ in range(N+1)]
for i in range(2,N+1):
    G[A[i]].append(i)

dp = [0 for _ in range(N+1)]
for i in range(N,0,-1):
    for j in G[i]:
        dp[i] += dp[j]+1
print(*dp[1:])