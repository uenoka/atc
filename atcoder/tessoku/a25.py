'''
# 問題

縦 $H$ 行、横 $W$ 列のマス目があります。\
上から $i$ 行目・左から $j$ 列目のマス $(i, j)$ は色 $c\_{i, j}$ で塗られています。\
ここで $c\_{i, j}$ が `.` ならば白、$c\_{i, j}$ が `#` ならば黒を意味します。

マス $(1, 1)$ から出発し、右方向または下方向の移動のみを繰り返して、マス $(H, W)$ まで行く方法は何通りありますか。\
ただし、黒いマスを通ることはできないものとします。

# 入力例

4 8
.....#..
........
..#...#.
#.......
-> 35


# 考察
数AかBでやったような問題だなぁ。と思うが、そういう解き方はちょっと難しそう。
さてどうやるか。
基本的には、左上から見ていって、今いる場所に来るには何通りの方法があるか(左と上の値を足せば良い)みたいな形で見ていけば良さそう。
dp[0][0] = 1 (初期値)
dp[0][1] = 1 (dp[0][0] + dp[-1][0]) 
dp[1][0] = 1 (dp[0][0] + dp[1][-1])
dp[1][1] = 2 (dp[0][1] + dp[1][0])
端っこと#に気をつければそれでいい気がする。
'''
def fprint(dp):
    for i in dp:
        print(i)
H, W = map(int,input().split())
C = []
for _ in range(H):
    C.append(list(input()))
dp = [[0 for _ in range(W)] for _ in range(H)]
dp[0][0] = 1
for h in range(H):
    for w in range(W):
        if C[h][w] == '#':
            dp[h][w] = 0
        elif w == 0 and h == 0:
            continue
        elif h == 0:
            dp[h][w] = dp[h][w-1]
        elif w == 0:
            dp[h][w] = dp[h-1][w]
        else:
            dp[h][w] = dp[h][w-1] + dp[h-1][w]
print(dp[H-1][W-1])
