
'''
# 問題

長さ $20$ の配列 $X = \[X\_1, X\_2, \cdots, X\_{20}]$ があります。最初は、すべての要素がゼロとなっています。\
あなたは配列に対して $T$ 回の操作を行います。$i$ 手目では、以下のいずれかを選択します。

> **操作A：**$X\_{P\_i}, X\_{Q\_i}, X\_{R\_i}$ に $+1$ を加算する。\
> **操作B：**$X\_{P\_i}, X\_{Q\_i}, X\_{R\_i}$ に $-1$ を加算する。

各操作が終わった後、「$X\_j=0$ となる $j$ の個数」だけスコアが加算されます。 すなわち、スコアの加算は全部で $T$ 回行われます。\
できるだけスコアが大きくなるような操作手順を求めてください。

# 考察

愚直に今の配列の値がどうすれば0に近づくかを見ていくというのをやってみる。
→ 足して0より小さい場合は1足す、大きければ1減らす?でもそうすると -9999 と +1, +1 みたいなときに最適にできない。
まぁでもこれでやってみよう。
39730
'''

T = int(input())
X = [0 for _ in range(20)]
for t in range(T):
    p,q,r = map(int,input().split())
    abs = X[p-1] + X[q-1] + X[r-1]
    if abs < 0:
        print('A')
        X[p-1] += 1
        X[q-1] += 1
        X[r-1] += 1
    else:
        print('B')
        X[p-1] -= 1
        X[q-1] -= 1
        X[r-1] -= 1