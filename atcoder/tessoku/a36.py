'''
# 問題

$N \times N$ のマス目があります。 「上下左右に隣り合うマスに移動する」という操作をちょうど $K$ 回行うことで、左上のマスから右下のマスまで移動できるかどうかを判定してください。

# 考察

まず距離を求めてそれより小さければ(というより右上から左下なので2(N-1)以下なら)NG
あとは到達してから偶奇を考えれば良さそう。ゴールのマス目のとなりに来たときに奇数個残っていれば行ける、偶数なら行けない。
証明は?
白黒でマス目を埋めると、ゴールの色の逆しか上下左右にはない。
そうすると、ここではゴールを黒とし、今いる場所をゴール隣の白とすると、
どのように迂回しようとしても、今→黒→白→黒→白→…でゴールのクロに行くには白で1残さないといけない。
白から白に行くには偶数回必ず移動する必要がある(=白から黒に行くには必ず奇数回移動する必要がある)
一回 2*(N-1) = K のケースで間違えたw
'''

N, K = map(int,input().split())
ans = 'No'
if 2*(N-1) <= K:
    if (K-2*(N-1))%2==0:
        ans='Yes'
print(ans)