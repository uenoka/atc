'''
# 問題
情報商店では $N$ 種類の品物を扱っています。それぞれ $1$ から $N$ までの番号が付けられています。\
この店では、いくつかの指定された品物を無料で買えるクーポン券が配布されています。

太郎君は $M$ 枚のクーポン券を持っています。\
クーポン券 $i$ $(i = 1, 2, \cdots, M)$ の情報は以下の通りです。

* $A\_{i, j} = 1$ のとき：品物 $j$ は無料で買える対象に含まれている。
* $A\_{i, j} = 0$ のとき：品物 $j$ は無料で買える対象に含まれていない。

最小何枚のクーポン券を使うことで、$N$ 種類すべての品物を買うことができますか。

# 問題概要

Nこの商品があり、M個のクーポンがある
クーポンにはN個の商品のうちいくつかが無料になると書いてある。
できるだけ少ないクーポン数ですべての商品を無料にしたい。

# 入力例

3 4
0 0 1
0 1 0
1 0 0
1 1 0
-> 2(1, 4 枚目を使う)

# 考察

M個のクーポンを使う、使わない、のステータスを管理するDPテーブルって感じかな?
例えば3つめまでを使う、使わない、を管理すると
0 0 0
0 1 0
0 1 1
0 0 1
1 0 0
1 1 0
1 1 1
1 0 1
の8パターンがある。4つ目のクーポンを使う、使わないを見ようとすると
この8パターンのあとにそれぞれ使う使わないをくっつけるイメージ
そうすると小さく分割した問題という感じになる。
それをどうコードに落としていくか、が問題。
縦をクーポン、横を商品の組み合わせ(入力例でいうと 1,2,3,12,13,123 のそれぞれの組)にする。
このとき添字を整数表現(商品1を2進数の1桁目の、商品2を2進数の2桁目、というようにしてなしありを0,1で表現すると
1,2,3,12,13,23,123はそれぞれ、1,2,4,3,5,6,7となる。わかりやすくするために並び順を変えて
1,2,12,3,13,23,123 の順でやる。)
多分これをしっかりビット演算とか出来るとうまく出来るんだろうなと思うがちょっとむずい。
Pythonとかなら添字を文字列にして0,1,10,11,100,みたいにしても良いんでは???
→ うまくできなかったから一旦写経AC
'''
N, M = map(int, input().split())

INF = 10**10
dp = [[INF] * (1 << N) for _ in range(M+1)]
dp[0][0] = 0

for i in range(M):
    A = list(map(int, input().split()))
    bit = 0
    for j in range(N):
        if A[j]:
            bit += 1 << j
    for j in range(1 << N):
        dp[i+1][j] = dp[i][j]
    for j in range(1 << N):
        dp[i+1][j | bit] = min(dp[i+1][j | bit], dp[i][j] + 1)

ans = dp[M][(1 << N) - 1]
if ans >= INF:
    print(-1)
else:
    print(ans)
