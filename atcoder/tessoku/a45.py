
'''
# 問題

太郎君は $N$ 枚のカードを持っています。$i$ 枚目 $(1 \leq i \leq N)$ のカードの色は文字 $A\_i$ で表され、`R` が赤、`B` が青、`W` が白に対応します。

彼は、下図の $6$ 種類の操作を行うことができます。たとえば右下の操作は「青 $1$ 枚と赤 $1$ 枚を、白 $1$ 枚に交換する操作」です。ここで、操作を $N - 1$ 回行うと $1$ 枚のカードが残ります。最後に残ったカードの色を $C$ にすることが可能かどうか、判定するプログラムを作成してください。

# 考察

うーん全く思いつかん。
BB -> R
RR -> B
WW -> W
WB -> B
WR -> R
BR -> W
なんとなくXORとかGrandy数みたいな感じで、遷移できる色があるからみたいな法則はありそうだが…
input が BB のときに絶対に R にしかできない、という感じで下から辿っていくことは出来るかも?
最後に R が残るには BB or RW のみ。という形で逆算する?
でもNの上限 2*10^5 だからO(NlogN)くらいまでしか許容できない。
これはわからんなぁ…
えぇ…どんな操作しても最後に残るの同じになるの…?
例えば
BBB → BR → W で必ず W になる
BBBB → BBR → RR or BW → B
カードにそれぞれ0,1,2 のスコアをつける、そうするとスコア変動が0か3しかならないので、最初のカードのスコアの合計%3 が答えになる。
じゃあこれスコアを1,3,5 とかにしたらどうなるの?という発想はあるよね
白→1、青→3、赤→5 とすると、
BB -> R : 3+3 -> 5(-1)
RR -> B : 5+5 -> 3(-7)
WW -> W : 1+1 -> 1(-1)
WB -> B : 1+3 -> 3(-1)
WR -> R : 1+5 -> 5(-1)
BR -> W : 3+5 -> 1(-7)
同じように動くけど、-7が出たりちょっと分かりづらい。
白→1、青→2、赤→3 ならどうなる?
BB -> R : 2+2 -> 3(-1)
RR -> B : 3+3 -> 2(-4)
WW -> W : 1+1 -> 1(-1)
WB -> B : 1+2 -> 2(-1)
WR -> R : 1+3 -> 3(-1)
BR -> W : 2+3 -> 1(-4)
今度は1,4で変動する。確かに3で割ったあまりだけどこれを見てもあまり良くわからないなって感じにはなる。
'''

NC = input().split()
N = int(NC[0])
C = NC[1]
A = input()
color = {'W':0,'B':1,'R':2}
point = {0:'W',1:'B',2:'R'}
sum = 0
for a in A:
    sum+=color[a]
print('Yes') if point[sum%3]==C else print('No')