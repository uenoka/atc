'''

# 問題概要

N 枚のカードの数字を組み合わせて合計 S が作れるか?

# 考察

いわゆる部分和問題。
純粋にやろうとすると、すべてのカードについて使う/使わない、を管理して
合計をすべて計算する必要がある。このときN枚のカードが2値を取るので
O(2**N) となる。がNが60なので間に合わない。
N 枚のカードをすべて見ると大変なので、 1 から順に、1枚目のときに取りうる値はなにか、
2枚目のとき取りうる値はなにか、と見ていき N まで見ていく
例えば入力例1の
```
3 7
2 2 3
```
の場合、1番目のカードしかない場合、取りうる値は 0 or 2
2番目のカードまである場合取りうる値は 0 or 2 or 4になる
(1番目のカードのときに 0 or 2 なので、それにそれぞれ2枚目のカードを使う/使わない、を足してあげるので
0+0, 0+2, 2+0, 2+2、となる。
)
これを N まで繰り返し、最終的に S が作れるかを見る。
この方法をシミュレーションするため、2次元配列を使って、横を目的とする数字、縦をカードの番号で管理する。
'''

def fprint(dp):
    for i in dp:
        print(i)

N, S = map(int,input().split())
A = [0] + list(map(int,input().split()))

dp = [[False for _ in range(S+1)] for _ in range(N+1)]
dp[0][0] = True
for i in range(1,N+1):
    for j in range(S+1):
        if j == 0:
            dp[i][j] = True 
        else:
            if j<A[i]:
                dp[i][j] = dp[i-1][j]
            else:
                dp[i][j] = dp[i-1][j-A[i]] or dp[i-1][j]
print('Yes' if dp[N][S] else 'No')