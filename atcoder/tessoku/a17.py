'''

# 問題概要

ダンジョンの部屋を移動して最後の部屋まで移動するのにかかる最小時間のときの移動経路を求める

# 考察

DP の経路復元問題。
前回の問題だと i 番目の部屋に最短で行くには、を計算したが、
今回は i 番目の部屋を通らない経路もあるので別の計算が必要。
例えば入力例1の
```
5
2 4 1 3
5 3 3
```
だと、1->3->5 or 1->2->4->5 で通らない部屋も当然ある。

# 解説

一度DPをして経路を計算する。
その後経路を逆に辿っていく。
例えばほんの解説例の入力
```
5
2 4 1 3
5 3 7
```
だと DP で作成した最短経路は
[0,2,5,5,8]
になる。
これを元に N から順に、N に到達する最小コストを実現する経路はどれか、と見ていく
例えば 
3->5 だと 3 の部屋の今までの総コストが 5, 3->5 の移動コストが 7 なので合わない、
4->5 だと 4 の部屋の今までの総コストが 5, 4->5 の移動コストが 3 なので合う、
とやっていく。
'''

N = int(input())
A = [0,0] + list(map(int,input().split()))
B = [0,0,0] + list(map(int,input().split()))
C = [0 for _ in range(N+2)]
D = [0 for _ in range(N+2)]
C[2] = A[2]
for i in range(3,N+1):
    C[i] = min(C[i-1]+A[i],C[i-2]+B[i])
idx = N
ans = []
ans.append(idx)
while idx > 1:
    if C[idx]==C[idx-1]+A[idx]:
        idx = idx-1
    else:
        idx = idx-2
    ans.append(idx)
ans.reverse()
print(len(ans))
print(*ans)